buildscript {
    ext {
        vertxVersion = '3.5.2'
        kotlin_version = '1.2.50'
    }

    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
        maven { url = "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.2.50"
    }
}

plugins {
    id 'java'
    id 'application'
}
apply plugin: 'maven'
apply plugin: 'kotlin'

version = '1.0.8-alpha'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}


mainClassName = 'io.raspberrywallet.MainKt'


run {
    args = ['run', mainClassName,
            "--launcher-class=io.vertx.core.Launcher",
            "--redeploy=src/**/*.*",
            "--on-redeploy=./gradlew classes"]
    manifest {
        attributes 'Main-Class': mainClassName
    }
}
dependencies {
    implementation "io.vertx:vertx-core:$vertxVersion"
    implementation "io.vertx:vertx-web:$vertxVersion"
    implementation "io.vertx:vertx-unit:$vertxVersion"
    implementation "io.vertx:vertx-jdbc-client:$vertxVersion"
    implementation "io.vertx:vertx-lang-kotlin:$vertxVersion"
    implementation "io.vertx:vertx-lang-kotlin-coroutines:$vertxVersion"
    implementation 'com.github.stasbar:easy-logger:1.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.2.50"
}

task fetchAssets(){
    def f = new File('src/main/resources/assets/')
    if (!f.exists()) {
        new URL('http://the_url').withInputStream{ i -> f.withOutputStream{ it << i }}
    }
}


kotlin {
    experimental {
        coroutines 'enable'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.0'
}


compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
